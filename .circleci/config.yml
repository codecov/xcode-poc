version: 2
jobs:
  build-and-test:
    macos:
      xcode: "11.4.0"
    working_directory: /Users/distiller/project
    environment:
      TERM: xterm-256color
      # FL_OUTPUT_DIR: output
      # FASTLANE_LANE: test
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run:
          name: Identify changed project(s), build, test, convert coverage report(s), and upload to Codecov
          command: |
            declare -a project_suffixes=('one' 'two')
            declare -a changed_projects=()
            for suffix in "${project_suffixes[@]}"
            do
              git diff --quiet --name-only HEAD HEAD~1 -- project-$suffix || changed_projects+=($suffix)
            done

            if [[ ${#changed_projects[@]} > 0 ]]
            then
              for suffix in "${changed_projects[@]}"
              do
                # build and test
                xcodebuild -project ./project-$suffix/xcode-poc-$suffix.xcodeproj -scheme xcode-poc  -sdk iphonesimulator -derivedDataPath ./project-$suffix/Build/ -destination name="iPhone 8" -enableCodeCoverage YES clean test

                # convert xcresult to codecov json
                XCRESULT=`find ./project-$suffix/Build/Logs/Test -name "*.xcresult"`
                echo Converting $XCRESULT to Codecov .json format
                ./bin/generate-codecov-json-macos --archive-path $XCRESULT --prefix /Users/distiller/project/

                # upload coverage to codecov
                COVERAGE_REPORT=`find ./ -name "coverage-report-*.json"`
                echo Uploading coverage report: $COVERAGE_REPORT
                bash <(curl -s https://codecov.io/bash) -f $COVERAGE_REPORT -F project_$suffix
                rm $COVERAGE_REPORT
              done
            else
              echo "Nothing changed in project folders; skipping"
            fi
      # - store_artifacts:
      #     path: output
      # - store_test_results:
      #     path: output/scan

  # adhoc:
  #   macos:
  #     xcode: "10.2.0"
  #   working_directory: /Users/distiller/project
  #   environment:
  #     FL_OUTPUT_DIR: output
  #     FASTLANE_LANE: adhoc
  #   shell: /bin/bash --login -o pipefail
  #   steps:
  #     - checkout
  #     - run: bundle install
  #     - run:
  #         name: Fastlane
  #         command: bundle exec fastlane $FASTLANE_LANE
  #     - store_artifacts:
  #         path: output/Game.ipa

  # beta:
  #   macos:
  #     xcode: "10.2.0"
  #   working_directory: /Users/distiller/project
  #   environment:
  #     FL_OUTPUT_DIR: output
  #     FASTLANE_LANE: beta
  #   shell: /bin/bash --login -o pipefail
  #   steps:
  #     - checkout
  #     - run: bundle install
  #     - run:
  #         name: Fastlane
  #         command: bundle exec fastlane $FASTLANE_LANE
  #     - store_artifacts:
  #         path: output/Game.ipa

workflows:
  version: 2
  build-test-adhoc:
    jobs:
      - build-and-test
      # - adhoc:
      #     filters:
      #       branches:
      #         only: development
      #     requires:
      #       - build-and-test
      #- beta:
          #filters:
            #branches:
              #only: master
          #requires:
            #- build-and-test
